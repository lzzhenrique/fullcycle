<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="02fa5224-4846-4b19-a5de-c7fd9ac4114c" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/infrastructure/api/presenters/products.presenter.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/infrastructure/api/__tests__/products.e2e.spec.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/infrastructure/api/__tests__/products.e2e.spec.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/infrastructure/api/presenters/customer.presenter.ts" beforeDir="false" afterPath="$PROJECT_DIR$/src/infrastructure/api/presenters/customer.presenter.ts" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="TypeScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;lzzhenrique&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/codeedu/fc2-arquitetura-hexagonal.git&quot;,
    &quot;accountId&quot;: &quot;005247a7-ab6b-4cfd-ae86-2fbb7f053692&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2juthLfbrKN3fIzedim1JPPZar3" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Jest.Customer unit tests.should throw error when id is empty.executor": "Run",
    "Jest.Customer unit tests.should throw error when name is empty.executor": "Run",
    "Jest.E2E test for customer.executor": "Run",
    "Jest.E2E test for customer.should be list customers.executor": "Run",
    "Jest.E2E test for customer.should list customers.executor": "Run",
    "Jest.E2E test for customer.should not create a customer.executor": "Run",
    "Jest.E2E test for product.executor": "Run",
    "Jest.E2E test for product.should be able to create a product.executor": "Run",
    "Jest.Integration test for update product.should update a product.executor": "Run",
    "Jest.Product unit tests.should throw error when price is less than zero.executor": "Run",
    "Jest.Product unit tests.should throw more than one error.executor": "Run",
    "Jest.Test create product use case.executor": "Run",
    "Jest.Test create product use case.should NOT create a product when the name is not defined.executor": "Run",
    "Jest.Test create product use case.should NOT create a product when the price is below 0.executor": "Run",
    "Jest.Test create product use case.should NOT create a product when the type is not supported by the factory .executor": "Run",
    "Jest.Test create product use case.should create a product.executor": "Run",
    "Jest.Test find a product usecase.executor": "Run",
    "Jest.Test find a product usecase.should NOT find a product.executor": "Run",
    "Jest.Test find a product usecase.should find a product.executor": "Run",
    "Jest.Test find all customers use case.executor": "Run",
    "Jest.Test find all customers use case.should find all customers.executor": "Run",
    "Jest.Test find customer use case.executor": "Run",
    "Jest.Test find customer use case.should NOT find a customer .executor": "Run",
    "Jest.Test find customer use case.should find a customer  (1).executor": "Debug",
    "Jest.Test find customer use case.should find a customer .executor": "Run",
    "Jest.Test list product usecase.should find a products.executor": "Run",
    "Jest.Test list products.should find all products.executor": "Run",
    "Jest.Unit test create a product.should NOT create a product .executor": "Run",
    "Jest.Unit test create a product.should NOT create a product when the name is not defined.executor": "Run",
    "Jest.Unit test create a product.should NOT create a product when the price is below 0 .executor": "Run",
    "Jest.Unit test create a product.should create a customer .executor": "Run",
    "Jest.Unit test create customer.executor": "Run",
    "Jest.Unit test create customer.should NOT create a customer.executor": "Run",
    "Jest.Unit test create customer.should create a customer.executor": "Run",
    "Jest.Unit test find a product.should find a product by his ID.executor": "Run",
    "Jest.Unit test for customer update.should update a customer.executor": "Run",
    "Jest.Unit test for update product.should update a product.executor": "Run",
    "Jest.Unit tests for notification.executor": "Run",
    "Jest.Unit tests for notification.should check if notification has some error.executor": "Run",
    "Jest.Unit tests for notification.should create errors.executor": "Run",
    "Jest.Unit tests for notification.should get all errors props.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "git-widget-placeholder": "fc-clean-architecture",
    "last_opened_file_path": "/home/luiz-henrique/Studies/fullcycle/fc-clean-architecture/src/infrastructure/api/presenters",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "/home/luiz-henrique/Studies/fullcycle/fc-clean-architecture/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.keymap",
    "ts.external.directory.path": "/home/luiz-henrique/Studies/fullcycle/fc-clean-architecture/node_modules/typescript/lib",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src/infrastructure/api/presenters" />
      <recent name="$PROJECT_DIR$/src/domain/product/validator" />
      <recent name="$PROJECT_DIR$/src/infrastructure/api/__tests__" />
      <recent name="$PROJECT_DIR$/src/infrastructure/api/routes" />
      <recent name="$PROJECT_DIR$/src/usecase/product/list" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/src" />
    </key>
  </component>
  <component name="RunManager" selected="Jest.E2E test for product.should list products">
    <configuration name="Customer unit tests.should throw error when name is empty" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/domain/customer/entity/customer.spec.ts" />
      <test-names>
        <test-name value="Customer unit tests" />
        <test-name value="should throw error when name is empty" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="E2E test for customer.should list customers" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/infrastructure/api/__tests__/customer.e2e.spec.ts" />
      <test-names>
        <test-name value="E2E test for customer" />
        <test-name value="should list customers" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="E2E test for product.should list products" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/infrastructure/api/__tests__/products.e2e.spec.ts" />
      <test-names>
        <test-name value="E2E test for product" />
        <test-name value="should list products" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Product unit tests.should throw error when price is less than zero" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/domain/product/entity/product.spec.ts" />
      <test-names>
        <test-name value="Product unit tests" />
        <test-name value="should throw error when price is less than zero" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Product unit tests.should throw more than one error" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/domain/product/entity/product.spec.ts" />
      <test-names>
        <test-name value="Product unit tests" />
        <test-name value="should throw more than one error" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.E2E test for product.should list products" />
        <item itemvalue="Jest.Product unit tests.should throw error when price is less than zero" />
        <item itemvalue="Jest.Product unit tests.should throw more than one error" />
        <item itemvalue="Jest.E2E test for customer.should list customers" />
        <item itemvalue="Jest.Customer unit tests.should throw error when name is empty" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-WS-241.17890.13" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="02fa5224-4846-4b19-a5de-c7fd9ac4114c" name="Changes" comment="" />
      <created>1722248908450</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1722248908450</updated>
      <workItem from="1722248910227" duration="4610000" />
      <workItem from="1722595927184" duration="4025000" />
      <workItem from="1722642169914" duration="4656000" />
      <workItem from="1722876880640" duration="6944000" />
      <workItem from="1722883834664" duration="1483000" />
      <workItem from="1722942165159" duration="3634000" />
      <workItem from="1723026879444" duration="3748000" />
      <workItem from="1723063883957" duration="25000" />
      <workItem from="1723112217752" duration="2511000" />
      <workItem from="1723460466205" duration="3097000" />
      <workItem from="1723736911088" duration="2598000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>